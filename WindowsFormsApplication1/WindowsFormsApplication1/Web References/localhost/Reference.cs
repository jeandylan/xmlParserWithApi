//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="contactBinding", Namespace="localhost/server.php")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Array))]
    public partial class contact : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback viewAllContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchLastNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchFirstNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchPrivateMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchStreetOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback editContactByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteContactByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public contact() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_localhost_contact;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event viewAllContactCompletedEventHandler viewAllContactCompleted;
        
        /// <remarks/>
        public event searchIdCompletedEventHandler searchIdCompleted;
        
        /// <remarks/>
        public event searchLastNameCompletedEventHandler searchLastNameCompleted;
        
        /// <remarks/>
        public event searchFirstNameCompletedEventHandler searchFirstNameCompleted;
        
        /// <remarks/>
        public event searchPrivateMobileCompletedEventHandler searchPrivateMobileCompleted;
        
        /// <remarks/>
        public event searchStreetCompletedEventHandler searchStreetCompleted;
        
        /// <remarks/>
        public event insertContactCompletedEventHandler insertContactCompleted;
        
        /// <remarks/>
        public event editContactByIdCompletedEventHandler editContactByIdCompleted;
        
        /// <remarks/>
        public event deleteContactByIdCompletedEventHandler deleteContactByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/viewAllContact", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray viewAllContact(string pstAnyThing) {
            object[] results = this.Invoke("viewAllContact", new object[] {
                        pstAnyThing});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void viewAllContactAsync(string pstAnyThing) {
            this.viewAllContactAsync(pstAnyThing, null);
        }
        
        /// <remarks/>
        public void viewAllContactAsync(string pstAnyThing, object userState) {
            if ((this.viewAllContactOperationCompleted == null)) {
                this.viewAllContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnviewAllContactOperationCompleted);
            }
            this.InvokeAsync("viewAllContact", new object[] {
                        pstAnyThing}, this.viewAllContactOperationCompleted, userState);
        }
        
        private void OnviewAllContactOperationCompleted(object arg) {
            if ((this.viewAllContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.viewAllContactCompleted(this, new viewAllContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/searchId", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray searchId(string pstId) {
            object[] results = this.Invoke("searchId", new object[] {
                        pstId});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void searchIdAsync(string pstId) {
            this.searchIdAsync(pstId, null);
        }
        
        /// <remarks/>
        public void searchIdAsync(string pstId, object userState) {
            if ((this.searchIdOperationCompleted == null)) {
                this.searchIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchIdOperationCompleted);
            }
            this.InvokeAsync("searchId", new object[] {
                        pstId}, this.searchIdOperationCompleted, userState);
        }
        
        private void OnsearchIdOperationCompleted(object arg) {
            if ((this.searchIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchIdCompleted(this, new searchIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/searchLastName", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray searchLastName(string pstLastName) {
            object[] results = this.Invoke("searchLastName", new object[] {
                        pstLastName});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void searchLastNameAsync(string pstLastName) {
            this.searchLastNameAsync(pstLastName, null);
        }
        
        /// <remarks/>
        public void searchLastNameAsync(string pstLastName, object userState) {
            if ((this.searchLastNameOperationCompleted == null)) {
                this.searchLastNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchLastNameOperationCompleted);
            }
            this.InvokeAsync("searchLastName", new object[] {
                        pstLastName}, this.searchLastNameOperationCompleted, userState);
        }
        
        private void OnsearchLastNameOperationCompleted(object arg) {
            if ((this.searchLastNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchLastNameCompleted(this, new searchLastNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/searchFirstName", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray searchFirstName(string pstFirstName) {
            object[] results = this.Invoke("searchFirstName", new object[] {
                        pstFirstName});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void searchFirstNameAsync(string pstFirstName) {
            this.searchFirstNameAsync(pstFirstName, null);
        }
        
        /// <remarks/>
        public void searchFirstNameAsync(string pstFirstName, object userState) {
            if ((this.searchFirstNameOperationCompleted == null)) {
                this.searchFirstNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchFirstNameOperationCompleted);
            }
            this.InvokeAsync("searchFirstName", new object[] {
                        pstFirstName}, this.searchFirstNameOperationCompleted, userState);
        }
        
        private void OnsearchFirstNameOperationCompleted(object arg) {
            if ((this.searchFirstNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchFirstNameCompleted(this, new searchFirstNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/searchPrivateMobile", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray searchPrivateMobile(string pstPrivateNumber) {
            object[] results = this.Invoke("searchPrivateMobile", new object[] {
                        pstPrivateNumber});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void searchPrivateMobileAsync(string pstPrivateNumber) {
            this.searchPrivateMobileAsync(pstPrivateNumber, null);
        }
        
        /// <remarks/>
        public void searchPrivateMobileAsync(string pstPrivateNumber, object userState) {
            if ((this.searchPrivateMobileOperationCompleted == null)) {
                this.searchPrivateMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchPrivateMobileOperationCompleted);
            }
            this.InvokeAsync("searchPrivateMobile", new object[] {
                        pstPrivateNumber}, this.searchPrivateMobileOperationCompleted, userState);
        }
        
        private void OnsearchPrivateMobileOperationCompleted(object arg) {
            if ((this.searchPrivateMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchPrivateMobileCompleted(this, new searchPrivateMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/searchStreet", RequestNamespace="tns", ResponseNamespace="tns", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ContactArray searchStreet(string pstFirstName) {
            object[] results = this.Invoke("searchStreet", new object[] {
                        pstFirstName});
            return ((ContactArray)(results[0]));
        }
        
        /// <remarks/>
        public void searchStreetAsync(string pstFirstName) {
            this.searchStreetAsync(pstFirstName, null);
        }
        
        /// <remarks/>
        public void searchStreetAsync(string pstFirstName, object userState) {
            if ((this.searchStreetOperationCompleted == null)) {
                this.searchStreetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchStreetOperationCompleted);
            }
            this.InvokeAsync("searchStreet", new object[] {
                        pstFirstName}, this.searchStreetOperationCompleted, userState);
        }
        
        private void OnsearchStreetOperationCompleted(object arg) {
            if ((this.searchStreetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchStreetCompleted(this, new searchStreetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/insertContact", RequestNamespace="tns", ResponseNamespace="tns")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string insertContact(string pstFirstName, string pstLastName, string pstNickName, string pstGender, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice) {
            object[] results = this.Invoke("insertContact", new object[] {
                        pstFirstName,
                        pstLastName,
                        pstNickName,
                        pstGender,
                        pstDateOfBirth,
                        pstCity,
                        pstStreet,
                        pstCountry,
                        pstPostalCode,
                        pstOfficeEmail,
                        pstPrivateEmail,
                        pstPrivateMobile,
                        pstOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertContactAsync(string pstFirstName, string pstLastName, string pstNickName, string pstGender, System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice) {
            this.insertContactAsync(pstFirstName, pstLastName, pstNickName, pstGender, pstDateOfBirth, pstCity, pstStreet, pstCountry, pstPostalCode, pstOfficeEmail, pstPrivateEmail, pstPrivateMobile, pstOffice, null);
        }
        
        /// <remarks/>
        public void insertContactAsync(string pstFirstName, string pstLastName, string pstNickName, string pstGender, System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice, object userState) {
            if ((this.insertContactOperationCompleted == null)) {
                this.insertContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertContactOperationCompleted);
            }
            this.InvokeAsync("insertContact", new object[] {
                        pstFirstName,
                        pstLastName,
                        pstNickName,
                        pstGender,
                        pstDateOfBirth,
                        pstCity,
                        pstStreet,
                        pstCountry,
                        pstPostalCode,
                        pstOfficeEmail,
                        pstPrivateEmail,
                        pstPrivateMobile,
                        pstOffice}, this.insertContactOperationCompleted, userState);
        }
        
        private void OninsertContactOperationCompleted(object arg) {
            if ((this.insertContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertContactCompleted(this, new insertContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/editContactById", RequestNamespace="tns", ResponseNamespace="tns")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string editContactById(string pstId, string pstFirstName, string pstLastName, string pstNickName, string pstGender, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice) {
            object[] results = this.Invoke("editContactById", new object[] {
                        pstId,
                        pstFirstName,
                        pstLastName,
                        pstNickName,
                        pstGender,
                        pstDateOfBirth,
                        pstCity,
                        pstStreet,
                        pstCountry,
                        pstPostalCode,
                        pstOfficeEmail,
                        pstPrivateEmail,
                        pstPrivateMobile,
                        pstOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editContactByIdAsync(string pstId, string pstFirstName, string pstLastName, string pstNickName, string pstGender, System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice) {
            this.editContactByIdAsync(pstId, pstFirstName, pstLastName, pstNickName, pstGender, pstDateOfBirth, pstCity, pstStreet, pstCountry, pstPostalCode, pstOfficeEmail, pstPrivateEmail, pstPrivateMobile, pstOffice, null);
        }
        
        /// <remarks/>
        public void editContactByIdAsync(string pstId, string pstFirstName, string pstLastName, string pstNickName, string pstGender, System.DateTime pstDateOfBirth, string pstCity, string pstStreet, string pstCountry, string pstPostalCode, string pstOfficeEmail, string pstPrivateEmail, string pstPrivateMobile, string pstOffice, object userState) {
            if ((this.editContactByIdOperationCompleted == null)) {
                this.editContactByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditContactByIdOperationCompleted);
            }
            this.InvokeAsync("editContactById", new object[] {
                        pstId,
                        pstFirstName,
                        pstLastName,
                        pstNickName,
                        pstGender,
                        pstDateOfBirth,
                        pstCity,
                        pstStreet,
                        pstCountry,
                        pstPostalCode,
                        pstOfficeEmail,
                        pstPrivateEmail,
                        pstPrivateMobile,
                        pstOffice}, this.editContactByIdOperationCompleted, userState);
        }
        
        private void OneditContactByIdOperationCompleted(object arg) {
            if ((this.editContactByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editContactByIdCompleted(this, new editContactByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/ContactWebService/server.php/deleteContactById", RequestNamespace="tns", ResponseNamespace="tns")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string deleteContactById(string pstId) {
            object[] results = this.Invoke("deleteContactById", new object[] {
                        pstId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteContactByIdAsync(string pstId) {
            this.deleteContactByIdAsync(pstId, null);
        }
        
        /// <remarks/>
        public void deleteContactByIdAsync(string pstId, object userState) {
            if ((this.deleteContactByIdOperationCompleted == null)) {
                this.deleteContactByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteContactByIdOperationCompleted);
            }
            this.InvokeAsync("deleteContactById", new object[] {
                        pstId}, this.deleteContactByIdOperationCompleted, userState);
        }
        
        private void OndeleteContactByIdOperationCompleted(object arg) {
            if ((this.deleteContactByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteContactByIdCompleted(this, new deleteContactByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="localhost/server.php")]
    public partial class ContactArray : Array {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactArray))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/soap/encoding/")]
    public partial class Array {
        
        private System.Xml.XmlElement[] anyField;
        
        private string arrayTypeField;
        
        private string offsetField;
        
        private bool offsetFieldSpecified;
        
        private string idField;
        
        private string hrefField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string arrayType {
            get {
                return this.arrayTypeField;
            }
            set {
                this.arrayTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                this.hrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void viewAllContactCompletedEventHandler(object sender, viewAllContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class viewAllContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal viewAllContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void searchIdCompletedEventHandler(object sender, searchIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void searchLastNameCompletedEventHandler(object sender, searchLastNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchLastNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchLastNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void searchFirstNameCompletedEventHandler(object sender, searchFirstNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchFirstNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchFirstNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void searchPrivateMobileCompletedEventHandler(object sender, searchPrivateMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchPrivateMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchPrivateMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void searchStreetCompletedEventHandler(object sender, searchStreetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchStreetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchStreetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void insertContactCompletedEventHandler(object sender, insertContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void editContactByIdCompletedEventHandler(object sender, editContactByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editContactByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editContactByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void deleteContactByIdCompletedEventHandler(object sender, deleteContactByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteContactByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteContactByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591